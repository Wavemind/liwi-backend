wb = xlsx_package.workbook
wrap = xlsx_package.workbook.styles.add_style alignment: {wrap_text: true}
unlocked = wb.styles.add_style locked: false

diagnostics = @version.diagnostics # generate diagnostics list
variables = @version.extract_nodes_from_version generate nodes list
questions_sequences = []
final_diagnoses = []
drugs = []
managements = []
languages_codes = Language.all.map(&:code)

# Build Diagnostic sheet
wb.add_worksheet(name: "Diagnoses") do |sheet|
  sheet.sheet_protection.password = 'P@ssw0rd'
  rows = ["ID", "Model", "Reference", "Label (en)"]
  unlocked_rows_indexes = []
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Label (#{l})")
  end
  sheet.add_row rows
  # Generate lists of node not yet set
  diagnostics.map do |diag|
    diag.components.map do |instance|
      node = instance.node
      if node.is_a? FinalDiagnostic
        final_diagnoses.push(node)
      elsif node.is_a? QuestionsSequence
        questions_sequences.push(node)
      elsif node.is_a? HealthCares::Drug
        drugs.push(node)
      elsif node.is_a? HealthCares::Management
        managements.push(node)
      end
    end

    rows = [diag.id, 'Diagnostic', diag.full_reference, diag.label_en]
    languages_codes.map do |l|
      rows.push(diag.send("label_#{l}"))
    end
    sheet.add_row rows
  end
  unlocked_rows_indexes.map do |i|
    sheet.col_style(i,unlocked,row_offset: 0)
  end

  # Remove duplicates
  questions_sequences = questions_sequences.uniq
  final_diagnoses = final_diagnoses.uniq
  drugs = drugs.uniq
  managements = managements.uniq
end

# Build FinalDiagnostic sheet
wb.add_worksheet(name: "Final Diagnoses") do |sheet|
  sheet.sheet_protection.password = 'P@ssw0rd'
  rows = ["ID", "Model", "Reference", "Label (en)"]
  unlocked_rows_indexes = []
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Label (#{l})")
  end
  rows.push("Description (en)")
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Description (#{l})")
  end
  sheet.add_row rows, style: wrap

  final_diagnoses.map do |node|
    rows = [node.id, "FinalDiagnostic", node.full_reference, node.label_en]
    languages_codes.map do |l|
      rows.push(node.send("label_#{l}"))
    end
    rows.push(node.description_en)
    languages_codes.map do |l|
      rows.push(node.send("description_#{l}"))
    end

    sheet.add_row rows, style: wrap
  end
  unlocked_rows_indexes.map do |i|
    sheet.col_style(i,unlocked,row_offset: 0)
  end
end

# Build Question sheet
wb.add_worksheet(name: "Variables") do |sheet|
  sheet.sheet_protection.password = 'P@ssw0rd'

  # Generate columns depending on different languages
  rows = ["ID", "Model", "Reference", "Label (en)"]
  unlocked_rows_indexes = []
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Label (#{l})")
  end
  rows.push("Description (en)")
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Description (#{l})")
  end
  # Create first line (with column names)
  sheet.add_row rows

  variables.map do |node|
    rows = [node.id, 'Question', node.full_reference, node.label_en]
    languages_codes.map do |l|
      rows.push(node.send("label_#{l}"))
    end
    rows.push(node.description_en)
    languages_codes.map do |l|
      rows.push(node.send("description_#{l}"))
    end

    sheet.add_row rows, style: wrap

    node.answers.each_with_index do |answer, index|
      rows = [answer.id, 'Answer', answer.full_reference, answer.label_en]
      languages_codes.map do |l|
        rows.push(answer.send("label_#{l}"))
      end
      sheet.add_row rows, style: wrap
    end unless [1,7,8].include?(node.answer_type_id)
  end
  unlocked_rows_indexes.map do |i|
    sheet.col_style(i,unlocked,row_offset: 0)
  end
end

# Build Drug sheet
wb.add_worksheet(name: "Drugs") do |sheet|
  sheet.sheet_protection.password = 'P@ssw0rd'

  rows = ["ID", "Model", "Reference", "Label (en)"]
  unlocked_rows_indexes = []
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Label (#{l})")
  end
  rows.push("Description (en)")
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Description (#{l})")
  end
  rows.push("Injection instructions (en)")
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Injection instructions (#{l})")
  end
  sheet.add_row rows, style: wrap

  drugs.map do |node|
    rows = [node.id, 'HealthCares::Drug', node.full_reference, node.label_en]
    languages_codes.map do |l|
      rows.push(node.send("label_#{l}"))
    end
    rows.push(node.description_en)
    languages_codes.map do |l|
      rows.push(node.send("description_#{l}"))
    end

    sheet.add_row rows, style: wrap

    node.formulations.each_with_index do |formulation, index|
      rows = [formulation.id, 'Formulation', '-', '-']
      languages_codes.map do |l|
        rows.push('-')
      end
      rows.push(formulation.description_en)
      languages_codes.map do |l|
        rows.push(formulation.send("description_#{l}"))
      end
      rows.push(formulation.injection_instructions_en)
      languages_codes.map do |l|
        rows.push(formulation.send("injection_instructions_#{l}"))
      end
      sheet.add_row rows, style: wrap
    end
  end
  unlocked_rows_indexes.map do |i|
    sheet.col_style(i,unlocked,row_offset: 0)
  end
end

# Build Management sheet
wb.add_worksheet(name: "Managements") do |sheet|
  sheet.sheet_protection.password = 'P@ssw0rd'

  rows = ["ID", "Model", "Reference", "Label (en)"]
  unlocked_rows_indexes = []
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Label (#{l})")
  end
  rows.push("Description (en)")
  languages_codes.map do |l|
    unlocked_rows_indexes.push(rows.count)
    rows.push("Description (#{l})")
  end
  sheet.add_row rows, style: wrap

  managements.map do |node|
    rows = [node.id, "HealthCares::Management", node.full_reference, node.label_en]
    languages_codes.map do |l|
      rows.push(node.send("label_#{l}"))
    end
    rows.push(node.description_en)
    languages_codes.map do |l|
      rows.push(node.send("description_#{l}"))
    end

    sheet.add_row rows, style: wrap
  end
  unlocked_rows_indexes.map do |i|
    sheet.col_style(i,unlocked,row_offset: 0)
  end
end
